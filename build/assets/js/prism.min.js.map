{"version":3,"sources":["prism.js","prism-markup.js","prism-apacheconf.js","prism-css.js","prism-json.js","prism-twig.js","prism-php.js","prism-bash.js","prism-javascript.js","prism-line-numbers.min.js"],"names":["_self","window","WorkerGlobalScope","self","Prism","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","language","parent","parentNode","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","startNode","startPos","oneshot","target","patterns","j","length","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","currentNode","next","pos","tail","str","removeCount","prev","lastIndex","from","index","to","p","k","after","removeFrom","removeRange","wrapped","list","array","node","push","toArray","all","add","name","callbacks","matchedStr","newNode","count","s","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","hasAttribute","readyState","defer","requestAnimationFrame","setTimeout","module","exports","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","tagName","includedCdataInside","included-cdata","def","xml","html","mathml","svg","string","css","atrule","rule","selector-function-argument","url","function","important","addInlined","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","regex","function-variable","parameter","constant","template-string","template-punctuation","interpolation","interpolation-punctuation","js","querySelector","fileHighlight","Extensions","py","rb","ps1","psm1","sh","bat","h","tex","pre","getAttribute","extension","createElement","appendChild","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","setAttribute","statusText","send","apacheconf","directive-inline","directive-block","directive-block-parameter","variable","directive-flags","json","null","twig","ld","rd","other","php","shell-comment","delimiter","package","string_interpolation","nowdoc-string","heredoc-string","single-quoted-string","double-quoted-string","buildPlaceholders","tokenizePlaceholders","envVars","insideString","environment","bash","shebang","function-name","for-or-select","assign-left","builtin","file-descriptor","toBeCopied","shell","l","c","m","t","a","n","r","split","style","display","getBoundingClientRect","height","children","getComputedStyle","currentStyle","u","counterReset","parseInt","lineNumbers","getLine","classList","contains"],"mappings":"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","file":"prism.min.js","sourcesContent":["\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document) {\n\t\t\t\treturn document.currentScript;\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentNode;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {boolean} [oneshot=false]\n * @param {string} [target]\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, oneshot, target) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (target && target == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar pattern = patterns[j],\n\t\t\t\tinside = pattern.inside,\n\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\tlookbehindLength = 0,\n\t\t\t\talias = pattern.alias;\n\n\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = pattern.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\n\t\t\t\tif (greedy && currentNode != tokenList.tail.prev) {\n\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || (typeof k.value === 'string' && !k.prev.value.greedy));\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str);\n\t\t\t\t}\n\n\t\t\t\tif (!match) {\n\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (lookbehind) {\n\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\tmatch = match[0].slice(lookbehindLength),\n\t\t\t\t\tto = from + match.length,\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(to);\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\n\t\t\t\tif (removeCount > 1)\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, true, token + ',' + j);\n\n\t\t\t\tif (oneshot)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n */\n\n/**\n * @template T\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:(?!<!--)[^\"'\\]]|\"[^\"]*\"|'[^']*'|<!--[\\s\\S]*?-->)*\\]\\s*)?>/i,\n\t\tgreedy: true\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\tpattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&|\\|\\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?[.?]?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*[\\s\\S]*?\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\t/**\n\t * @param {Element} [container=document]\n\t */\n\tself.Prism.fileHighlight = function(container) {\n\t\tcontainer = container || document;\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t// ignore if already loaded\n\t\t\tif (pre.hasAttribute('data-src-loaded')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// load current\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute('data-src-loaded', '');\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\t// execute inside handler, for dropping Event as argument\n\t\tself.Prism.fileHighlight();\n\t});\n\n})();\n","Prism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:(?!<!--)[^\"'\\]]|\"[^\"]*\"|'[^']*'|<!--[\\s\\S]*?-->)*\\]\\s*)?>/i,\n\t\tgreedy: true\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n","Prism.languages.apacheconf = {\n\t'comment': /#.*/,\n\t'directive-inline': {\n\t\tpattern: /(^\\s*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|Type|UserFile|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferSize|BufferedLogs|CGIDScriptTimeout|CGIMapExtension|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DTracePrivileges|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtFilterDefine|ExtFilterOptions|ExtendedStatus|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|KeepAlive|KeepAliveTimeout|KeptBodySize|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|LanguagePriority|Limit(?:InternalRecursion|Request(?:Body|FieldSize|Fields|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|MMapFile|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|ModMimeUsePathInfo|ModemStandard|MultiviewsMatch|Mutex|NWSSLTrustedCerts|NWSSLUpgradeable|NameVirtualHost|NoProxy|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|RLimitCPU|RLimitMEM|RLimitNPROC|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|SSIETag|SSIEndTag|SSIErrorMsg|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|SRPUnknownUserSeed|SRPVerifierFile|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UseStapling|UserName|VerifyClient|VerifyDepth)|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadStackSize|ThreadsPerChild|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n\t'directive-block': {\n\t\tpattern: /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b *.*>/i,\n\t\tinside: {\n\t\t\t'directive-block': {\n\t\t\t\tpattern: /^<\\/?\\w+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/\n\t\t\t\t},\n\t\t\t\talias: 'tag'\n\t\t\t},\n\t\t\t'directive-block-parameter': {\n\t\t\t\tpattern: /.*[^>]/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /:/,\n\t\t\t\t\t'string': {\n\t\t\t\t\t\tpattern: /(\"|').*\\1/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'attr-value'\n\t\t\t},\n\t\t\t'punctuation': />/\n\t\t},\n\t\talias: 'tag'\n\t},\n\t'directive-flags': {\n\t\tpattern: /\\[(?:\\w,?)+\\]/,\n\t\talias: 'keyword'\n\t},\n\t'string': {\n\t\tpattern: /(\"|').*\\1/,\n\t\tinside: {\n\t\t\t'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n\t\t}\n\t},\n\t'variable': /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n\t'regex': /\\^?.*\\$|\\^.*\\$?/\n};\n","(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\tpattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n","Prism.languages.json = {\n\t'property': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tgreedy: true\n\t},\n\t'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t'number': /-?\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n","Prism.languages.twig = {\n\t'comment': /\\{#[\\s\\S]*?#\\}/,\n\t'tag': {\n\t\tpattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n\t\tinside: {\n\t\t\t'ld': {\n\t\t\t\tpattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^(?:\\{\\{|\\{%)-?/,\n\t\t\t\t\t'keyword': /\\w+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'rd': {\n\t\t\t\tpattern: /-?(?:%\\}|\\}\\})$/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /.+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^['\"]|['\"]$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'keyword': /\\b(?:even|if|odd)\\b/,\n\t\t\t'boolean': /\\b(?:true|false|null)\\b/,\n\t\t\t'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n\t\t\t'operator': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t/[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n\t\t\t],\n\t\t\t'property': /\\b[a-zA-Z_]\\w*\\b/,\n\t\t\t'punctuation': /[()\\[\\]{}:.,]/\n\t\t}\n\t},\n\n\t// The rest can be parsed as HTML\n\t'other': {\n\t\t// We want non-blank matches\n\t\tpattern: /\\S(?:[\\s\\S]*\\S)?/,\n\t\tinside: Prism.languages.markup\n\t}\n};\n","/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n(function (Prism) {\n\tPrism.languages.php = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n\t\t'boolean': {\n\t\t\tpattern: /\\b(?:false|true)\\b/i,\n\t\t\talias: 'constant'\n\t\t},\n\t\t'constant': [\n\t\t\t/\\b[A-Z_][A-Z0-9_]*\\b/,\n\t\t\t/\\b(?:null)\\b/i,\n\t\t],\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('php', 'string', {\n\t\t'shell-comment': {\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('php', 'comment', {\n\t\t'delimiter': {\n\t\t\tpattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n\t\t\talias: 'important'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('php', 'keyword', {\n\t\t'variable': /\\$+(?:\\w+\\b|(?={))/i,\n\t\t'package': {\n\t\t\tpattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\\\/\n\t\t\t}\n\t\t}\n\t});\n\n\t// Must be defined after the function pattern\n\tPrism.languages.insertBefore('php', 'operator', {\n\t\t'property': {\n\t\t\tpattern: /(->)[\\w]+/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n\tvar string_interpolation = {\n\t\tpattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n\t\tlookbehind: true,\n\t\tinside: Prism.languages.php\n\t};\n\n\tPrism.languages.insertBefore('php', 'string', {\n\t\t'nowdoc-string': {\n\t\t\tpattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<'?|[';]$/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'heredoc-string': {\n\t\t\tpattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n\t\t\t\t\talias: 'symbol',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<<<\"?|[\";]$/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'interpolation': string_interpolation // See below\n\t\t\t}\n\t\t},\n\t\t'single-quoted-string': {\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'double-quoted-string': {\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'interpolation': string_interpolation // See below\n\t\t\t}\n\t\t}\n\t});\n\t// The different types of PHP strings \"replace\" the C-like standard string\n\tdelete Prism.languages.php['string'];\n\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tif (!/<\\?/.test(env.code)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n\t});\n\n}(Prism));\n","(function(Prism) {\n\t// $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n\t// + LC_ALL, RANDOM, REPLY, SECONDS.\n\t// + make sure PS1..4 are here as they are not always set,\n\t// - some useless things.\n\tvar envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n\tvar insideString = {\n\t\t'environment': {\n\t\t\tpattern: RegExp(\"\\\\$\" + envVars),\n\t\t\talias: 'constant'\n\t\t},\n\t\t'variable': [\n\t\t\t// [0]: Arithmetic Environment\n\t\t\t{\n\t\t\t\tpattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable\n\t\t\t\t\t'variable': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/^\\$\\(\\(/\n\t\t\t\t\t],\n\t\t\t\t\t'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n\t\t\t\t\t'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation\n\t\t\t\t\t'punctuation': /\\(\\(?|\\)\\)?|,|;/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// [1]: Command Substitution\n\t\t\t{\n\t\t\t\tpattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'variable': /^\\$\\(|^`|\\)$|`$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// [2]: Brace expansion\n\t\t\t{\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n\t\t\t\t\t'punctuation': /[\\[\\]]/,\n\t\t\t\t\t'environment': {\n\t\t\t\t\t\tpattern: RegExp(\"(\\\\{)\" + envVars),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'constant'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t/\\$(?:\\w+|[#?*!@$])/\n\t\t],\n\t\t// Escape sequences from echo and printf's manuals, and escaped quotes.\n\t\t'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n\t};\n\n\tPrism.languages.bash = {\n\t\t'shebang': {\n\t\t\tpattern: /^#!\\s*\\/.*/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\"{\\\\$])#.*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function-name': [\n\t\t\t// a) function foo {\n\t\t\t// b) foo() {\n\t\t\t// c) function foo() {\n\t\t\t// but not “foo {”\n\t\t\t{\n\t\t\t\t// a) and c)\n\t\t\t\tpattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'function'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// b)\n\t\t\t\tpattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n\t\t\t\talias: 'function'\n\t\t\t}\n\t\t],\n\t\t// Highlight variable names as variables in for and select beginnings.\n\t\t'for-or-select': {\n\t\t\tpattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t// Highlight variable names as variables in the left-hand part\n\t\t// of assignments (“=” and “+=”).\n\t\t'assign-left': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n\t\t\tinside: {\n\t\t\t\t'environment': {\n\t\t\t\t\tpattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'constant'\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'variable',\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': [\n\t\t\t// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s*(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t},\n\t\t\t// Here-document with quotes around the tag\n\t\t\t// → No expansion (so no “inside”).\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s*(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t// “Normal” string\n\t\t\t{\n\t\t\t\tpattern: /(^|[^\\\\](?:\\\\\\\\)*)([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\2)[^\\\\])*\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t}\n\t\t],\n\t\t'environment': {\n\t\t\tpattern: RegExp(\"\\\\$?\" + envVars),\n\t\t\talias: 'constant'\n\t\t},\n\t\t'variable': insideString.variable,\n\t\t'function': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t// https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n\t\t'builtin': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true,\n\t\t\t// Alias added to make those easier to distinguish from strings.\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'file-descriptor': {\n\t\t\tpattern: /\\B&\\d\\b/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'operator': {\n\t\t\t// Lots of redirections here, but not just that.\n\t\t\tpattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n\t\t\tinside: {\n\t\t\t\t'file-descriptor': {\n\t\t\t\t\tpattern: /^\\d/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n\t\t'number': {\n\t\t\tpattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n\t\t\tlookbehind: true\n\t\t}\n\t};\n\n\t/* Patterns in command substitution. */\n\tvar toBeCopied = [\n\t\t'comment',\n\t\t'function-name',\n\t\t'for-or-select',\n\t\t'assign-left',\n\t\t'string',\n\t\t'environment',\n\t\t'function',\n\t\t'keyword',\n\t\t'builtin',\n\t\t'boolean',\n\t\t'file-descriptor',\n\t\t'operator',\n\t\t'punctuation',\n\t\t'number'\n\t];\n\tvar inside = insideString.variable[1].inside;\n\tfor(var i = 0; i < toBeCopied.length; i++) {\n\t\tinside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n\t}\n\n\tPrism.languages.shell = Prism.languages.bash;\n})(Prism);\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&|\\|\\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?[.?]?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*[\\s\\S]*?\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","!function(){if(\"undefined\"!=typeof self&&self.Prism&&self.document){var l=\"line-numbers\",c=/\\n(?!$)/g,m=function(e){var t=a(e)[\"white-space\"];if(\"pre-wrap\"===t||\"pre-line\"===t){var n=e.querySelector(\"code\"),r=e.querySelector(\".line-numbers-rows\"),s=e.querySelector(\".line-numbers-sizer\"),i=n.textContent.split(c);s||((s=document.createElement(\"span\")).className=\"line-numbers-sizer\",n.appendChild(s)),s.style.display=\"block\",i.forEach(function(e,t){s.textContent=e||\"\\n\";var n=s.getBoundingClientRect().height;r.children[t].style.height=n+\"px\"}),s.textContent=\"\",s.style.display=\"none\"}},a=function(e){return e?window.getComputedStyle?getComputedStyle(e):e.currentStyle||null:null};window.addEventListener(\"resize\",function(){Array.prototype.forEach.call(document.querySelectorAll(\"pre.\"+l),m)}),Prism.hooks.add(\"complete\",function(e){if(e.code){var t=e.element,n=t.parentNode;if(n&&/pre/i.test(n.nodeName)&&!t.querySelector(\".line-numbers-rows\")){for(var r=!1,s=/(?:^|\\s)line-numbers(?:\\s|$)/,i=t;i;i=i.parentNode)if(s.test(i.className)){r=!0;break}if(r){t.className=t.className.replace(s,\" \"),s.test(n.className)||(n.className+=\" line-numbers\");var l,a=e.code.match(c),o=a?a.length+1:1,u=new Array(o+1).join(\"<span></span>\");(l=document.createElement(\"span\")).setAttribute(\"aria-hidden\",\"true\"),l.className=\"line-numbers-rows\",l.innerHTML=u,n.hasAttribute(\"data-start\")&&(n.style.counterReset=\"linenumber \"+(parseInt(n.getAttribute(\"data-start\"),10)-1)),e.element.appendChild(l),m(n),Prism.hooks.run(\"line-numbers\",e)}}}}),Prism.hooks.add(\"line-numbers\",function(e){e.plugins=e.plugins||{},e.plugins.lineNumbers=!0}),Prism.plugins.lineNumbers={getLine:function(e,t){if(\"PRE\"===e.tagName&&e.classList.contains(l)){var n=e.querySelector(\".line-numbers-rows\"),r=parseInt(e.getAttribute(\"data-start\"),10)||1,s=r+(n.children.length-1);t<r&&(t=r),s<t&&(t=s);var i=t-r;return n.children[i]}}}}}();"]}